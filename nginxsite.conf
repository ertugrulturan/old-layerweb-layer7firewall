server {
  listen 8081;
  listen [::]:8081;

  server_name layerweb.com.tr;

  location ~* \.(jpg|woff|woff2|jpeg|svg|png|gif|ico|css|js|webp)$ {
    proxy_set_header   Host             $host;
    proxy_set_header   X-Real-IP        $remote_addr;
    proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
    proxy_pass      http://[backed server]:80;
  }
  add_header Set-Cookie "DDoSGUARD=X1N0ZTY; Path=/;";
  location / {
    if ($http_cookie ~* "LAYERWEBCheck=([^;]+)(?:;|$)") {
      set $bProxyMatched $1;
    }
    set $user_agent_version "unknown";
    
    if ($http_user_agent ~* "Linux") {
      set $user_agent_version "0307";
    }
    if ($http_user_agent ~* "Windows") {
      set $user_agent_version "0107";
    }
    if ($http_user_agent ~* "Android") {
      set $user_agent_version "0204";
    }
    if ($http_user_agent ~* "Macintosh") {
      set $user_agent_version "3152";
    }
    if ($http_user_agent ~* "iPad") {
      set $user_agent_version "3152";
    }
    if ($http_user_agent ~* "iPhone") {
      set $user_agent_version "0555";
    }
    if ($http_user_agent ~* "wget") {
      return 444;
    }

    if ($user_agent_version = "unknown") {
      return 444;
    }
set $session_file "/etc/nginx/sessions/$cookie_LW";

access_by_lua_block {
  local session_utils = require("session_utils")
  local session_file = ngx.var.session_file
  local ua = ngx.var.http_user_agent
  local ip = ngx.var.http_cf_connecting_ip

  local function is_blacklisted(ip)
    local file = io.open("/etc/nginx/lwblacklist.txt", "r")
    if file then
      local blacklist = file:read("*a")
      file:close()
      if string.match(blacklist, ip) then
        return true
      end
    end

    return false
  end

  if is_blacklisted(ip) then
    ngx.exit(444)
  end

  if session_utils.session_file_exists(session_file) then
    local file = io.open(session_file, "r")
    if file then
      local session_content = file:read("*a")
      file:close()
      if session_content then
        local session_ua, session_ip = session_content:match("^(.-)%+ip(.+)$")
        if session_ua and session_ip and ua and ip and session_ua == ua and session_ip == ip then
          return
        end
      end
    end
  end

  ngx.exec("/dogrula.html")
}

        proxy_pass http://[backed server]:80;
        break;
    rewrite ^ /dogrula.html last;
  }

location /lwguard {
    default_type "text/plain";
    content_by_lua_block {
        ngx.say(ngx.var.http_cf_connecting_ip)
    }
}

location /tr/odeme/Iyzico/ {
        proxy_set_header   Host             $host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_pass      http://[backed server]:80;
}
location /pay/Iyzico/ {
        proxy_set_header   Host             $host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_pass      http://[backed server]:80;
}
location /license/ {
        proxy_set_header   Host             $host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_pass      http://[backed server]:80;
}
location /tr/lwport/invoices {
        proxy_set_header   Host             $host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_pass      http://[backed server]:80;
}

location /lwAntiBypass {
	limit_req zone=antibypass burst=4 nodelay;
	proxy_set_header   Host             $host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_pass      http://127.0.0.1:4040/check;
}

  location = /dogrula.html {
    default_type "text/html";
    content_by_lua_block {
ngx.say("<script src='https://block.layer.web.tr/control.js'></script>")
ngx.say("<script type=\"text/javascript\">")
ngx.say("var _0x5df456=_0x3964;function _0x120b(){var _0x35a800=['640624HBCLWK','52VRySeM','5038776lezhpu','%3C%64%69%76%20%73%74%79%6C%65%3D%22%64%69%73%70%6C%61%79%3A%20%6E%6F%6E%65%3B%22%3E%0A%3C%69%66%72%61%6D%65%20%73%72%63%3D%2F%6C%77%41%6E%74%69%42%79%70%61%73%73%3E%3C%2F%69%66%72%61%6D%65%3E%0A%3C%21%2D%2D%20%41%4D%4B%20%42%41%4B%54%49%4E%44%41%20%4E%45%20%4F%4C%44%55%20%2D%2D%3E%0A%3C%2F%64%69%76%3E','10QbTvWT','3025372kBwayX','2048832BhRNWj','2862584IKUgmL','71772JDbwrC','2461797MPqefv','write'];_0x120b=function(){return _0x35a800;};return _0x120b();}function _0x3964(_0x467d0e,_0x3cf695){var _0x120ba7=_0x120b();return _0x3964=function(_0x39649c,_0x12f7c5){_0x39649c=_0x39649c-0xa3;var _0x21fc68=_0x120ba7[_0x39649c];return _0x21fc68;},_0x3964(_0x467d0e,_0x3cf695);}(function(_0x2751c2,_0x896f66){var _0x459952=_0x3964,_0x3ca9f6=_0x2751c2();while(!![]){try{var _0x25263a=parseInt(_0x459952(0xa7))/0x1+parseInt(_0x459952(0xa8))/0x2*(parseInt(_0x459952(0xa4))/0x3)+-parseInt(_0x459952(0xa3))/0x4+parseInt(_0x459952(0xab))/0x5*(parseInt(_0x459952(0xad))/0x6)+-parseInt(_0x459952(0xac))/0x7+-parseInt(_0x459952(0xa9))/0x8+parseInt(_0x459952(0xa5))/0x9;if(_0x25263a===_0x896f66)break;else _0x3ca9f6['push'](_0x3ca9f6['shift']());}catch(_0x138f4b){_0x3ca9f6['push'](_0x3ca9f6['shift']());}}}(_0x120b,0x6bc5c),document[_0x5df456(0xa6)](unescape(_0x5df456(0xaa))));")
ngx.say("document.write(unescape
ngx.say("</script>")
      ngx.eof(); -- Ozel Ip Dogrulama
    }
  }
  proxy_redirect off;
  proxy_max_temp_file_size 0;
  proxy_connect_timeout      720;
  proxy_send_timeout         720;
  proxy_read_timeout         720;
  proxy_buffer_size          128k;
  proxy_buffers              4 256k;
  proxy_busy_buffers_size    256k;
  proxy_temp_file_write_size 256k;
  proxy_set_header Host $host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
}
server {
    listen 8080;
    listen [::]:8080;

    server_name layerweb.com.tr;

    location / {
     proxy_redirect off;
     proxy_max_temp_file_size 0;
     proxy_connect_timeout      720;
     proxy_send_timeout         720;
     proxy_read_timeout         720;
     proxy_buffer_size          128k;
     proxy_buffers              4 256k;
     proxy_busy_buffers_size    256k;
     proxy_temp_file_write_size 256k;
     proxy_set_header Host $host;
     proxy_set_header X-Real-IP $remote_addr;
     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
     proxy_pass      http://[backed server]:80;   
  }
}



